apiVersion: github.com/jmacd/duckpond/v1
kind: Derive
name: csvextract
desc: Extract from CSV
spec:
  collections:
  - pattern: {{ resource }}/*surface*.csv
    name: SurfaceMeasurements
    query: >
      
      WITH INPUT as
       (SELECT
        STRPTIME("Timestamp", '%Y-%m-%d %H:%M')::TIMESTAMP_S as T,
        "Series Name" as SN,
        Location as L,
        Parameter as P,
        Value as V,
        "Offset" as O
        FROM read_csv('$1')
       ),
      TIMES AS (SELECT DISTINCT T FROM INPUT),
      PH    AS (SELECT * FROM INPUT WHERE SN = 'Surface pH'),
      TEMP  AS (SELECT * FROM INPUT WHERE SN = 'Surface Temp'),
      CHLA  AS (SELECT * FROM INPUT WHERE SN = 'Surface Chl-a'),
      DOX   AS (SELECT * FROM INPUT WHERE SN = 'Surface DO'),
      SAL   AS (SELECT * FROM INPUT WHERE SN = 'Surface Salinity'),
      DEPTH AS (SELECT * FROM INPUT WHERE SN = 'Depth')
      
      SELECT
      
      TIMES.T AS "Timestamp",
      PH.V    AS "Surface pH",
      TEMP.V  AS "Surface Temp",
      CHLA.V  AS "Surface Chl-a",
      DOX.V   AS "Surface DO",
      SAL.V   AS "Surface Salinity",
      (
      DEPTH.V - DEPTH.O
      ) AS "Surface Depth"
      
      FROM
      
      TIMES
      LEFT JOIN PH ON TIMES.T = PH.T
      LEFT JOIN TEMP ON TIMES.T = TEMP.T
      LEFT JOIN CHLA ON TIMES.T = CHLA.T
      LEFT JOIN DOX ON TIMES.T = DOX.T
      LEFT JOIN SAL ON TIMES.T = SAL.T
      LEFT JOIN DEPTH ON TIMES.T = DEPTH.T
      
      ORDER BY TIMES.T

  - pattern: {{ resource }}/*bottom*.csv
    name: BottomMeasurements
    query: >
      
      WITH INPUT as
       (SELECT
        STRPTIME("Timestamp", '%Y-%m-%d %H:%M')::TIMESTAMP_S as T,
        "Series Name" as SN,
        Location as L,
        Parameter as P,
        Value as V,
        "Offset" as O
        FROM read_csv('$1')
       ),
      TIMES AS (SELECT DISTINCT T FROM INPUT),
      TEMP  AS (SELECT * FROM INPUT WHERE SN = 'Bottom Temp'),
      DOX   AS (SELECT * FROM INPUT WHERE SN = 'Bottom DO'),
      SAL   AS (SELECT * FROM INPUT WHERE SN = 'Bottom Salinity'),
      DEPTH AS (SELECT * FROM INPUT WHERE SN = 'Depth')
      
      SELECT
      
      TIMES.T AS "Timestamp",
      TEMP.V  AS "Bottom Temp",
      DOX.V   AS "Bottom DO",
      SAL.V   AS "Bottom Salinity",
      (
      DEPTH.V - DEPTH.O
      ) AS "Bottom Depth"
      
      FROM
      
      TIMES
      LEFT JOIN TEMP ON TIMES.T = TEMP.T
      LEFT JOIN DOX ON TIMES.T = DOX.T
      LEFT JOIN SAL ON TIMES.T = SAL.T
      LEFT JOIN DEPTH ON TIMES.T = DEPTH.T
      
      ORDER BY TIMES.T

  - pattern: {{ resource }}/*vulink*.csv
    name: VulinkMeasurements
    query: >
      
      WITH INPUT as
       (SELECT
        STRPTIME("Timestamp", '%Y-%m-%d %H:%M')::TIMESTAMP_S as T,
        "Series Name" as SN,
        Location as L,
        Parameter as P,
        Value as V,
        "Offset" as O
        FROM read_csv('$1')
       ),
      TIMES AS (SELECT DISTINCT T FROM INPUT),
      BATT  AS (SELECT * FROM INPUT WHERE SN = 'Battery Level'),
      BARO  AS (SELECT * FROM INPUT WHERE SN = 'Baro')
      
      SELECT
      
      TIMES.T AS "Timestamp",
      BATT.V  AS "Battery Level",
      BARO.V  AS "Baro"
      
      FROM
      
      TIMES
      LEFT JOIN BATT ON TIMES.T = BATT.T
      LEFT JOIN BARO ON TIMES.T = BARO.T
      
      ORDER BY TIMES.T


